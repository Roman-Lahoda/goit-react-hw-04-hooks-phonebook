{"version":3,"sources":["App.module.css","component/ContactsList/ContactList.module.css","component/Filter/Filter.module.css","component/ContactsForm/ContactsForm.module.css","component/ContactsForm/ContactsForm.js","component/Filter/Filter.js","component/ContactsList/ContactList.js","App.js","index.js"],"names":["module","exports","initialState","name","number","filter","ContactsFrom","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","label","input","type","onChange","pattern","title","required","btn","Component","Filter","ContactsList","list","onDelete","contactList","map","item","contact","onClick","id","App","contacts","onAddContact","data","newContact","shortid","generate","find","alert","onChangeFilter","onDeleteContact","contactId","prevState","normalizedFilter","toLowerCase","filteredContacts","includes","phonebook","pageTitle","ContactsForm","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c359a1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__2Aozt\",\"pageTitle\":\"App_pageTitle__3g2-r\",\"title\":\"App_title__DknOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2LHZR\",\"contact\":\"ContactList_contact__1_4UY\",\"btn\":\"ContactList_btn__2Ukqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1zkGn\",\"input\":\"Filter_input__1Px9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__1HVIi\",\"label\":\"ContactsForm_label__1IL5w\",\"input\":\"ContactsForm_input__1Y-EL\",\"btn\":\"ContactsForm_btn__1Y99m\"};","import { Component } from \"react\";\r\nimport s from \"./ContactsForm.module.css\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  filter: \"\",\r\n};\r\n\r\nclass ContactsFrom extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ ...initialState });\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsFrom;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = ({ list, onDelete }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {list.map((item) => {\r\n        return (\r\n          <li key={item.id} className={s.contact}>\r\n            <span>{item.name}:</span>\r\n            <span>{item.number}</span>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDelete(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./App.module.css\";\nimport ContactsForm from \"./component/ContactsForm\";\nimport Filter from \"./component/Filter\";\nimport ContactsList from \"./component/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onAddContact = (data) => {\n    const newContact = {\n      id: shortid.generate(),\n      ...data,\n    };\n\n    const sameContact = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    if (sameContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div className={s.phonebook}>\n        <h1 className={s.pageTitle}>Phonebook</h1>\n        <ContactsForm onSubmit={this.onAddContact} />\n        <h2 className={s.title}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.onChangeFilter} />\n        )}\n        {/* <Filter value={filter} onChange={this.onChangeFilter} /> */}\n        <ContactsList list={filteredContacts} onDelete={this.onDeleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}